// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: videos.sql

package database

import (
	"context"
)

const getVideos = `-- name: GetVideos :many
SELECT id FROM videos
`

func (q *Queries) GetVideos(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getVideos)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var id string
		if err := rows.Scan(&id); err != nil {
			return nil, err
		}
		items = append(items, id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const saveVideo = `-- name: SaveVideo :one
INSERT INTO videos (id)
VALUES (?)
RETURNING id
`

func (q *Queries) SaveVideo(ctx context.Context, id string) (string, error) {
	row := q.db.QueryRowContext(ctx, saveVideo, id)
	err := row.Scan(&id)
	return id, err
}
